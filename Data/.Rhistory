rownames(resumen)<-c("Shapiro-Wilks Normality p-value","Anderson-Darling p-value","Jarque-Bera p-value","Breusch-Pagan p-value","Durbin-Watson p-value",
"Ljung-Box (lag 1) p-value","Ljung-Box (lag 2) p-value","Ljung-Box (lag 3) p-value","Ljung-Box (lag4) p-value",
"Ljung-Box (lag 12) p-value","Ljung-Box (lag 24) p-value","Ljung-Box (lag 36) p-value","Ljung-Box (lag 48) p-value",
"Log Likelihood","AIC","RMSPE", "MAPE","Mean Length")
resumen[1,1]=sw[1]
resumen[2,1]=ad[1]
resumen[3,1]=jb[1]
resumen[4,1]=bp[1]
resumen[5,1]=dw[1]
resumen[6,1]=lj[1]
resumen[7,1]=lj[2]
resumen[8,1]=lj[3]
resumen[9,1]=lj[4]
resumen[10,1]=lj[5]
resumen[11,1]=lj[6]
resumen[12,1]=lj[7]
resumen[13,1]=lj[8]
resumen[14,1]=model$loglik
resumen[15,1]=model$aic
resumen[16,1]=NA
resumen[17,1]=NA
resumen[18,1]=NA
return(resumen)
}
#dades=d1d12lnserie #stationary series
validation(model1.2)
#dades=d1d12lnserie #stationary series
validation(model2.2)
if (!require("forecast")) install.packages("forecast")
if (!require("readxl")) install.packages("readxl")
if (!require("tseries")) install.packages("tseries")
# Load the packages
library(forecast)
library(readxl)
library(tseries)
# Step 1: Read the Excel file
# Adjust the path to match where your file is located on your local machine
data <- read_excel("/path/to/your/Assignment_1.xlsx")
data <- read_excel("/Users/OscarEAM/Library/CloudStorage/OneDrive-UniversityofCopenhagen/Økonomi Bachelor/6 Semester/Økonometri II/Hjemmeopgaver/Hjemmeopgave 1/Assignment_1.xlsx")
View(data)
View(data)
# Convert the 'D3LC' column to a numeric time series, skipping rows with #N/A
d3lc_series <- na.approx(as.numeric(data$D3LC))
library(zoo) # for na.approx
install.packages("zoo")
library(zoo) # for na.approx
# Step 1: Read the Excel file
# Adjust the path to match where your file is located on your local machine
data <- read_excel("/Users/OscarEAM/Library/CloudStorage/OneDrive-UniversityofCopenhagen/Økonomi Bachelor/6 Semester/Økonometri II/Hjemmeopgaver/Hjemmeopgave 1/Assignment_1.xlsx")
# Convert the 'D3LC' column to a numeric time series, skipping rows with #N/A
d3lc_series <- na.approx(as.numeric(data$D3LC))
# Create a time series object from the 'D3LC' column
ts_data <- ts(d3lc_series, frequency = 4) # Adjust the frequency if needed
# Plot your data
plot(ts_data, main = "D3LC Time Series Data")
# Check for stationarity
adf.test(ts_data, na.action = na.omit)
ts_data <- ts(d3lc_series, frequency = 4) # Adjust the frequency if needed
plot(ts_data, main = "D3LC Time Series Data")
adf.test(ts_data, na.action = na.omit)
best_model <- auto.arima(ts_data, seasonal = FALSE) # Assuming non-seasonal data
summary(best_model)
checkresiduals(best_model)
# Install necessary packages if you haven't already
if (!require("forecast")) install.packages("forecast")
if (!require("readxl")) install.packages("readxl")
if (!require("lubridate")) install.packages("lubridate")
# Load the packages
library(forecast)
library(readxl)
library(lubridate)
# Read the Excel file
data <- read_excel("path_to_your_file.xlsx", sheet = "your_sheet_name")
data <- read_excel("path_to_your_file.xlsx", sheet = "your_sheet_name")
data$Date <- as.Date(data$Date)
data_filtered <- data[data$Date > as.Date("2019-12-01"), ]
# Read the Excel file
data <- read_excel("/Users/OscarEAM/Library/CloudStorage/OneDrive-UniversityofCopenhagen/Økonomi Bachelor/6 Semester/Økonometri II/Hjemmeopgaver/Hjemmeopgave 1/Assignment_1.xlsx")
# Format the Date column to Date type if it isn't already
data$Date <- as.Date(data$Date)
# Filter data to only include after December 1, 2019
data_filtered <- data[data$Date > as.Date("2019-12-01"), ]
# Install necessary packages if you haven't already
if (!require("forecast")) install.packages("forecast")
if (!require("readxl")) install.packages("readxl")
if (!require("lubridate")) install.packages("lubridate")
# Load the packages
library(forecast)
library(readxl)
library(lubridate)
# Read the Excel file
data <- read_excel("/Users/OscarEAM/Library/CloudStorage/OneDrive-UniversityofCopenhagen/Økonomi Bachelor/6 Semester/Økonometri II/Hjemmeopgaver/Hjemmeopgave 1/Assignment_1.xlsx")
# Format the Date column to Date type if it isn't already
data$Date <- as.Date(data$Date)
# Filter data to only include after December 1, 2019
data_filtered <- data[data$Date > as.Date("2019-12-01"), ]
ts_data <- na.omit(data_filtered$D3LC)
View(data)
View(data)
ts_data <- ts(ts_data, frequency = 12)
plot(ts_data, main = "D3LC Time Series Data")
plot(ts_data, main = "D3LC Time Series Data")
best_model <- auto.arima(ts_data)
View(data)
# Forecasting future values is not required as you wanted the model only until December 2019.
if (!require("forecast")) install.packages("forecast")
if (!require("readxl")) install.packages("readxl")
if (!require("tseries")) install.packages("tseries")
if (!require("dplyr")) install.packages("dplyr")
# Load the packages
library(forecast)
library(readxl)
library(tseries)
library(dplyr)
# Step 1: Read the Excel file
# Adjust the path to match where your file is located on your local machine
data <- read_excel("/Users/OscarEAM/Library/CloudStorage/OneDrive-UniversityofCopenhagen/Økonomi Bachelor/6 Semester/Økonometri II/Hjemmeopgaver/Hjemmeopgave 1/Assignment_1.xlsx")
# Assuming the date is in the first column and D3LC in the fourth column
# Convert the date to a Date object
data$Date <- as.Date(data$Date)
# Filter data to only include up to December 2019
data_filtered <- data %>% filter(Date <= as.Date("2019-12-01"))
# Select the 'D3LC' column, remove NA values, and convert to a numeric vector
d3lc_series <- na.omit(as.numeric(data_filtered$D3LC))
# Create a time series object from the 'D3LC' column
# Adjust the frequency based on the periodicity of your time series data
ts_data <- ts(d3lc_series, frequency = 4)
# Plot your data
plot(ts_data, main = "D3LC Time Series Data")
# Check for stationarity
adf.test(ts_data, na.action = na.omit)
ts_data <- ts(d3lc_series, frequency = 12)
View(data_filtered)
plot(ts_data, main = "D3LC Time Series Data")
adf.test(ts_data, na.action = na.omit)
best_model <- auto.arima(ts_data, seasonal = FALSE) # Assuming non-seasonal data
View(best_model)
summary(best_model)
install.packages(vroom)
install.packages(vroom)
library(vroom)
install.packages("vroom")
install.packages(vroom)
install.packages(vroom)
install.packages("vroom")
library(vroom)
library(dplyr)
library(vroom)
d <- vroom("/Users/OscarEAM/Downloads/data - ho4 øko2.csv")
d <- vroom("/Users/OscarEAM/Downloads/data - ho4 øko2.csv", delim = ";")
View(d)
library(vroom)
library(openxlsx)
install.packages("openxlsx")
library(openxlsx)
d <- vroom("/Users/OscarEAM/Downloads/data - ho4 øko2.csv", delim = ";")
# eksport:
write.xlsx(d, "/Users/OscarEAM/Downloads/data_output.xlsx")
library(vroom)
library(dplyr)
sp500 <- vroom("/Users/OscarEAM/Downloads/SP500.csv")
wd <- "/Users/OscarEAM/Downloads/"
sp500 <- vroom("SP500.csv")
sp500 <- vroom("/SP500.csv")
wd <- "/Users/OscarEAM/Downloads"
sp500 <- vroom("SP500.csv")
wd <- "/Users/OscarEAM/Downloads/"
sp500 <- vroom("SP500.csv")
sp500 <- vroom("/Users/OscarEAM/Downloads/SP500.csv")
nvda <- vroom("/Users/OscarEAM/Downloads/NVDA.csv")
msft <- vroom("/Users/OscarEAM/Downloads/MSFT.csv")
meta <- vroom("/Users/OscarEAM/Downloads/META.csv")
names(sp500)
j Close
sp500 <- vroom("/Users/OscarEAM/Downloads/SP500.csv") %>%
select("Date", "Adj Close")
sp500 <- vroom("/Users/OscarEAM/Downloads/SP500.csv") %>%
select("Date", "Adj Close")
nvda <- vroom("/Users/OscarEAM/Downloads/NVDA.csv")%>%
select("Date", "Adj Close")
nvda <- vroom("/Users/OscarEAM/Downloads/NVDA.csv")%>%
select("Date", "Adj Close")
nvda <- vroom("/Users/OscarEAM/Downloads/NVDA.csv")%>%
select("Date", "Adj Close")
names(nvda)
library(vroom)
library(dplyr)
sp500 <- vroom("/Users/OscarEAM/Downloads/SP500.csv") %>%
select("Date", "Adj Close")
nvda <- vroom("/Users/OscarEAM/Downloads/NVDA.csv")%>%
select("Date", "adjusted_close")
nvda <- vroom("/Users/OscarEAM/Downloads/NVDA.csv")%>%
select("date", "adjusted_close")
msft <- vroom("/Users/OscarEAM/Downloads/MSFT.csv")%>%
select("date", "adjusted_close")
meta <- vroom("/Users/OscarEAM/Downloads/META.csv")%>%
select("date", "adjusted_close")
sp500 <- vroom("/Users/OscarEAM/Downloads/SP500.csv") %>%
select("Date", "Adj Close") %>% mutate(
rename(date = Data)
)
sp500 <- vroom("/Users/OscarEAM/Downloads/SP500.csv") %>%
select("Date", "Adj Close") %>% mutate(
rename(date = Date)
)
stock_data <- left_join(
sp500, nvda, by = "Data"
)
stock_data <- left_join(
sp500, nvda, by = "Date"
)
View(meta)
View(meta)
library(vroom)
library(dplyr)
# Læs data og omdøb kolonner for konsistens
sp500 <- vroom("/Users/OscarEAM/Downloads/SP500.csv") %>%
rename(Date = "Date", adjusted_close = "Adj Close")
nvda <- vroom("/Users/OscarEAM/Downloads/NVDA.csv") %>%
rename(Date = "date", adjusted_close = "adjusted_close")
msft <- vroom("/Users/OscarEAM/Downloads/MSFT.csv") %>%
rename(Date = "date", adjusted_close = "adjusted_close")
aapl <- vroom("/Users/OscarEAM/Downloads/AAPL.csv") %>%
rename(Date = "date", adjusted_close = "adjusted_close")
# Merge alle data sammen
stock_data <- sp500 %>%
left_join(nvda, by = "Date", suffix = c("_sp500", "_nvda")) %>%
left_join(msft, by = "Date", suffix = c("", "_msft")) %>%
left_join(aapl, by = "Date", suffix = c("", "_aapl"))
# Vis de første par rækker for at kontrollere resultatet
head(stock_data)
View(stock_data)
library(vroom)
library(dplyr)
# Læs data og omdøb kolonner for konsistens
sp500 <- vroom("/Users/OscarEAM/Downloads/SP500.csv") %>%
rename(Date = "Date", adjusted_close_sp500 = "Adj Close")
nvda <- vroom("/Users/OscarEAM/Downloads/NVDA.csv") %>%
rename(Date = "date", adjusted_close_nvda = "adjusted_close")
msft <- vroom("/Users/OscarEAM/Downloads/MSFT.csv") %>%
rename(Date = "date", adjusted_close_msft = "adjusted_close")
aapl <- vroom("/Users/OscarEAM/Downloads/AAPL.csv") %>%
rename(Date = "date", adjusted_close_aapl = "adjusted_close")
# Merge alle data sammen, kun med kolonnerne "Date" og "adjusted_close" for hver aktie
stock_data <- sp500 %>%
left_join(nvda, by = "Date") %>%
left_join(msft, by = "Date") %>%
left_join(aapl, by = "Date")
# Vis de første par rækker for at kontrollere resultatet
head(stock_data)
library(vroom)
library(dplyr)
# Læs data og omdøb kolonner for konsistens
sp500 <- vroom("/Users/OscarEAM/Downloads/SP500.csv") %>%
rename(Date = "Date", adjusted_close_sp500 = "Adj Close") %>%
select(Date, adjusted_close_sp500)
nvda <- vroom("/Users/OscarEAM/Downloads/NVDA.csv") %>%
rename(Date = "date", adjusted_close_nvda = "adjusted_close") %>%
select(Date, adjusted_close_nvda)
msft <- vroom("/Users/OscarEAM/Downloads/MSFT.csv") %>%
rename(Date = "date", adjusted_close_msft = "adjusted_close") %>%
select(Date, adjusted_close_msft)
aapl <- vroom("/Users/OscarEAM/Downloads/AAPL.csv") %>%
rename(Date = "date", adjusted_close_aapl = "adjusted_close") %>%
select(Date, adjusted_close_aapl)
# Merge alle data sammen, kun med kolonnerne "Date" og "adjusted_close" for hver aktie
stock_data <- sp500 %>%
left_join(nvda, by = "Date") %>%
left_join(msft, by = "Date") %>%
left_join(aapl, by = "Date")
# Vis de første par rækker for at kontrollere resultatet
head(stock_data)
View(stock_data)
library(vroom)
library(dplyr)
install.packages("openxlsx")
library(openxlsx)
# Læs data og omdøb kolonner for konsistens
sp500 <- vroom("/Users/OscarEAM/Downloads/SP500.csv") %>%
rename(Date = "Date", adjusted_close_sp500 = "Adj Close") %>%
select(Date, adjusted_close_sp500)
nvda <- vroom("/Users/OscarEAM/Downloads/NVDA.csv") %>%
rename(Date = "date", adjusted_close_nvda = "adjusted_close") %>%
select(Date, adjusted_close_nvda)
msft <- vroom("/Users/OscarEAM/Downloads/MSFT.csv") %>%
rename(Date = "date", adjusted_close_msft = "adjusted_close") %>%
select(Date, adjusted_close_msft)
aapl <- vroom("/Users/OscarEAM/Downloads/AAPL.csv") %>%
rename(Date = "date", adjusted_close_aapl = "adjusted_close") %>%
select(Date, adjusted_close_aapl)
# Merge alle data sammen, kun med kolonnerne "Date" og "adjusted_close" for hver aktie
stock_data <- sp500 %>%
left_join(nvda, by = "Date") %>%
left_join(msft, by = "Date") %>%
left_join(aapl, by = "Date")
# Vis de første par rækker for at kontrollere resultatet
head(stock_data)
write.xlsx(stock_data, file = "/Users/OscarEAM/Downloads/Stock_data.xlsx")
library(vroom)
library(dplyr)
install.packages("openxlsx")
library(openxlsx)
# Læs data og omdøb kolonner for konsistens
sp500 <- vroom("/Users/OscarEAM/Downloads/SP500.csv") %>%
rename(Date = "Date", adjusted_close_sp500 = "Adj Close") %>%
select(Date, adjusted_close_sp500)
nvda <- vroom("/Users/OscarEAM/Downloads/NVDA.csv") %>%
rename(Date = "date", adjusted_close_nvda = "adjusted_close") %>%
select(Date, adjusted_close_nvda)
wmt <- vroom("/Users/OscarEAM/Downloads/WMT.csv") %>%
rename(Date = "date", adjusted_close_msft = "adjusted_close") %>%
select(Date, adjusted_close_msft)
library(vroom)
library(dplyr)
install.packages("openxlsx")
library(openxlsx)
# Læs data og omdøb kolonner for konsistens
sp500 <- vroom("/Users/OscarEAM/Downloads/SP500.csv") %>%
rename(Date = "Date", adjusted_close_sp500 = "Adj Close") %>%
select(Date, adjusted_close_sp500)
nvda <- vroom("/Users/OscarEAM/Downloads/NVDA.csv") %>%
rename(Date = "date", adjusted_close_nvda = "adjusted_close") %>%
select(Date, adjusted_close_nvda)
wmt <- vroom("/Users/OscarEAM/Downloads/WMT.csv") %>%
rename(Date = "date", adjusted_close_msft = "adjusted_close") %>%
select(Date, adjusted_close_msft)
AMZN <- vroom("/Users/OscarEAM/Downloads/AMZN.csv") %>%
rename(Date = "date", adjusted_close_aapl = "adjusted_close") %>%
select(Date, adjusted_close_aapl)
# Merge alle data sammen, kun med kolonnerne "Date" og "adjusted_close" for hver aktie
stock_data <- sp500 %>%
left_join(nvda, by = "Date") %>%
left_join(msft, by = "Date") %>%
left_join(aapl, by = "Date")
install.packages("openxlsx")
# Læs data og omdøb kolonner for konsistens
sp500 <- vroom("/Users/OscarEAM/Downloads/SP500.csv") %>%
rename(Date = "Date", adjusted_close_sp500 = "Adj Close") %>%
select(Date, adjusted_close_sp500)
library(vroom)
library(dplyr)
library(openxlsx)
# Læs data og omdøb kolonner for konsistens
sp500 <- vroom("/Users/OscarEAM/Downloads/SP500.csv") %>%
rename(Date = "Date", adjusted_close_sp500 = "Adj Close") %>%
select(Date, adjusted_close_sp500)
nvda <- vroom("/Users/OscarEAM/Downloads/NVDA.csv") %>%
rename(Date = "date", adjusted_close_nvda = "adjusted_close") %>%
select(Date, adjusted_close_nvda)
wmt <- vroom("/Users/OscarEAM/Downloads/WMT.csv") %>%
rename(Date = "date", adjusted_close_msft = "adjusted_close") %>%
select(Date, adjusted_close_msft)
AMZN <- vroom("/Users/OscarEAM/Downloads/AMZN.csv") %>%
rename(Date = "date", adjusted_close_aapl = "adjusted_close") %>%
select(Date, adjusted_close_aapl)
# Merge alle data sammen, kun med kolonnerne "Date" og "adjusted_close" for hver aktie
stock_data <- sp500 %>%
left_join(nvda, by = "Date") %>%
left_join(msft, by = "Date") %>%
left_join(aapl, by = "Date")
library(vroom)
library(dplyr)
library(openxlsx)
# Læs data og omdøb kolonner for konsistens
sp500 <- vroom("/Users/OscarEAM/Downloads/SP500.csv") %>%
rename(Date = "Date", adjusted_close_sp500 = "Adj Close") %>%
select(Date, adjusted_close_sp500)
nvda <- vroom("/Users/OscarEAM/Downloads/NVDA.csv") %>%
rename(Date = "date", adjusted_close_nvda = "adjusted_close") %>%
select(Date, adjusted_close_nvda)
wmt <- vroom("/Users/OscarEAM/Downloads/WMT.csv") %>%
rename(Date = "date", adjusted_close_msft = "adjusted_close") %>%
select(Date, adjusted_close_msft)
amzn <- vroom("/Users/OscarEAM/Downloads/AMZN.csv") %>%
rename(Date = "date", adjusted_close_aapl = "adjusted_close") %>%
select(Date, adjusted_close_aapl)
# Merge alle data sammen, kun med kolonnerne "Date" og "adjusted_close" for hver aktie
stock_data <- sp500 %>%
left_join(nvda, by = "Date") %>%
left_join(wmt, by = "Date") %>%
left_join(amzn, by = "Date")
# Vis de første par rækker for at kontrollere resultatet
head(stock_data)
write.xlsx(stock_data, file = "/Users/OscarEAM/Downloads/Stock_data.xlsx")
library(vroom)
library(dplyr)
library(openxlsx)
# Læs data og omdøb kolonner for konsistens
sp500 <- vroom("/Users/OscarEAM/Downloads/SP500.csv") %>%
rename(Date = "Date", adjusted_close_sp500 = "Adj Close") %>%
select(Date, adjusted_close_sp500)
nvda <- vroom("/Users/OscarEAM/Downloads/NVDA.csv") %>%
rename(Date = "date", adjusted_close_nvda = "adjusted_close") %>%
select(Date, adjusted_close_nvda)
wmt <- vroom("/Users/OscarEAM/Downloads/WMT.csv") %>%
rename(Date = "date", adjusted_close_wmt = "adjusted_close") %>%
select(Date, adjusted_close_msft)
library(vroom)
library(dplyr)
library(openxlsx)
# Læs data og omdøb kolonner for konsistens
sp500 <- vroom("/Users/OscarEAM/Downloads/SP500.csv") %>%
rename(Date = "Date", adjusted_close_sp500 = "Adj Close") %>%
select(Date, adjusted_close_sp500)
nvda <- vroom("/Users/OscarEAM/Downloads/NVDA.csv") %>%
rename(Date = "date", adjusted_close_nvda = "adjusted_close") %>%
select(Date, adjusted_close_nvda)
wmt <- vroom("/Users/OscarEAM/Downloads/WMT.csv") %>%
rename(Date = "date", adjusted_close_wmt = "adjusted_close") %>%
select(Date, adjusted_close_wmt)
amzn <- vroom("/Users/OscarEAM/Downloads/AMZN.csv") %>%
rename(Date = "date", adjusted_close_amzn = "adjusted_close") %>%
select(Date, adjusted_close_amzn)
# Merge alle data sammen, kun med kolonnerne "Date" og "adjusted_close" for hver aktie
stock_data <- sp500 %>%
left_join(nvda, by = "Date") %>%
left_join(wmt, by = "Date") %>%
left_join(amzn, by = "Date")
# Vis de første par rækker for at kontrollere resultatet
head(stock_data)
write.xlsx(stock_data, file = "/Users/OscarEAM/Downloads/Stock_data.xlsx")
View(stock_data)
write.xlsx(stock_data, file = "/Users/OscarEAM/Desktop/Stock_data.xlsx")
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
install.packages("OptionPricing")
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
rm(list=ls())
d <- readRDS("IV_mpshock_release.RData")
d <- readRDS("/Users/OscarEAM/Downloads/IV_mpshock_release.RData")
d <- readRDS("\Users\OscarEAM\Downloads\IV_mpshock_release.RData")
d <- load("/Users/OscarEAM/Downloads/IV_mpshock_release.RData")
source("~/Library/CloudStorage/OneDrive-UniversityofCopenhagen/Økonomi - Kandidat/Advanced Macroeconomics - Empirical Analysis/2) Country data.R", echo=TRUE)
View(gdp_data)
source("~/Library/CloudStorage/OneDrive-UniversityofCopenhagen/Økonomi - Kandidat/Advanced Macroeconomics - Empirical Analysis/2) Country data.R", echo=TRUE)
View(gdp_data)
# Filter for Germany (DE)
gdp_de <- subset(gdp_data, geo == "DE")
ipi_de <- subset(ipi_data, geo == "DE")
unemp_de <- subset(unemp_data, geo == "DE")
hicp_de <- subset(hicp_data, geo == "DE")
View(gdp_de)
ipi_data <- get_eurostat("sts_inpr_m", filters = list(s_adj = "SA", unit = "I15"))
source("~/Library/CloudStorage/OneDrive-UniversityofCopenhagen/Økonomi - Kandidat/Advanced Macroeconomics - Empirical Analysis/2) Country data.R", echo=TRUE)
# Fetch Eurostat data (Quarterly where available)
gdp_data <- get_eurostat("namq_10_gdp", filters = list(unit = "CLV10_MEUR", na_item = "B1GQ", s_adj = "SCA"), cache = FALSE)
ipi_data <- get_eurostat("sts_inpr_q", filters = list(s_adj = "SA", unit = "I15"), cache = FALSE)
unemp_data <- get_eurostat("une_rt_q", filters = list(s_adj = "SA"), cache = FALSE)
hicp_data <- get_eurostat("prc_hicp_midx", cache = FALSE)  # Monthly, will convert to quarterly
# Filter for Germany (DE)
gdp_de <- subset(gdp_data, geo == "DE")
#ipi_de <- subset(ipi_data, geo == "DE")
unemp_de <- subset(unemp_data, geo == "DE")
hicp_de <- subset(hicp_data, geo == "DE")
View(unemp_de)
View(gdp_de)
rm(list=ls())
cat("\014")
setwd("/Users/OscarEAM/Library/CloudStorage/OneDrive-UniversityofCopenhagen/Økonomi - Kandidat/Heterogenous-spillover-ECB/Data")
set.seed(4)
source("R kode/Load_Packages.R")
rm(list=ls())
cat("\014")
setwd("/Users/OscarEAM/Library/CloudStorage/OneDrive-UniversityofCopenhagen/Økonomi - Kandidat/Heterogenous-spillover-ECB/Data")
set.seed(4)
source("R kode/Load_Packages.R")
#Code inspired by https://github.com/martinbaumgaertner/hfdshocks/blob/main/R/rotate.R
source("/Users/OscarEAM/Library/CloudStorage/OneDrive-UniversityofCopenhagen/Økonomi - Kandidat/Heterogenous-spillover-ECB/Tamas filer/load_Packages.R")
library("MSBVAR")
install.packages("MSBVAR")
#estimate factormodel
factor_model <- function(Z,center=F,scaleZ=T){
Tn<-nrow(Z)
nn<-ncol(Z)
if(center==T){
meanZ=colMeans(Z)
}else{
meanZ=rep(0,nn)
}
if(scaleZ==T){
sdZ=apply(Z, 2, sd)
}else{
sdZ=rep(1,nn)
}
X=sweep(sweep(Z,2,meanZ), 2, sdZ, "/")
ev<-eigen(t(X)%*%X,only.values=F)
neg<-which(ev$values<0)
if(!length(neg)==0){
break
}
lamda<-ev$values
sigma<-sqrt(lamda/Tn)
v_k<-sigma^2/sum(sigma^2)
Lambda<-sqrt(nn)*ev$vectors
Fa=X%*%Lambda/nn
return(list(factors=Fa,loadings=Lambda,eigenvalues=lamda,center=meanZ,scale=sdZ,data=Z))
}
fm<-factor_model(HFI_matrix)
rm(list=ls())
cat("\014")
setwd("/Users/OscarEAM/Library/CloudStorage/OneDrive-UniversityofCopenhagen/Økonomi - Kandidat/Heterogenous-spillover-ECB/Data")
set.seed(4)
source("R kode/Load_Packages.R")
#Code inspired by https://github.com/martinbaumgaertner/hfdshocks/blob/main/R/rotate.R
source("/Users/OscarEAM/Library/CloudStorage/OneDrive-UniversityofCopenhagen/Økonomi - Kandidat/Heterogenous-spillover-ECB/Tamas filer/load_Packages.R")
